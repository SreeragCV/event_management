{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreer\\\\Code\\\\REACT\\\\routingAdvanced\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem.js\";\nimport EventsList from \"../components/EventsList.js\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  // const params = useParams();\n\n  // const [fetchData, setFetchData] = useState(null);\n  // const [error, setError] = useState();\n\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     try {\n  //       const response = await fetch(\n  //         `http://localhost:8080/eventss/${params.eventId}`\n  //       );\n  //       const data = await response.json();\n  //       const event = await data.event;\n  //       console.log(data.event);\n  //       setFetchData(event);\n  //     } catch (error) {\n  //       setError({\n  //         message:\n  //           \"failed to fetch the event, please try again..\",\n  //       });\n  //     }\n  //   }\n  //   fetchData();\n  // }, []);\n\n  // if(error){\n  //   return <Error message={error.message} title='Error fetching data!'/>\n  // }\n\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          event: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailsPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvent(id) {\n  const response = await fetch(`http://localhost:8080/events/${id}`);\n  if (!response.ok) {\n    throw json({\n      message: \"Error fetching the event\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  return resData.event;\n}\nexport function loader({\n  request,\n  params\n}) {\n  const id = params.id;\n  defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  request,\n  params\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"some error occured in deleting the event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["Await","defer","json","redirect","useRouteLoaderData","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","EventDetailsPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loadEvent","id","loader","request","params","action","eventId","method","$RefreshReg$"],"sources":["C:/Users/sreer/Code/REACT/routingAdvanced/frontend/src/pages/EventDetailsPage.jsx"],"sourcesContent":["import {\r\n  Await,\r\n  defer,\r\n  json,\r\n  redirect,\r\n  useRouteLoaderData,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem.js\";\r\nimport EventsList from \"../components/EventsList.js\";\r\nimport { Suspense } from \"react\";\r\n\r\nfunction EventDetailsPage() {\r\n  // const params = useParams();\r\n\r\n  // const [fetchData, setFetchData] = useState(null);\r\n  // const [error, setError] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     try {\r\n  //       const response = await fetch(\r\n  //         `http://localhost:8080/eventss/${params.eventId}`\r\n  //       );\r\n  //       const data = await response.json();\r\n  //       const event = await data.event;\r\n  //       console.log(data.event);\r\n  //       setFetchData(event);\r\n  //     } catch (error) {\r\n  //       setError({\r\n  //         message:\r\n  //           \"failed to fetch the event, please try again..\",\r\n  //       });\r\n  //     }\r\n  //   }\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // if(error){\r\n  //   return <Error message={error.message} title='Error fetching data!'/>\r\n  // }\r\n\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n  return (\r\n    <div>\r\n      <Suspense>\r\n        <Await resolve={event}>\r\n          {(loadedEvent) => <EventItem event={loadedEvent}/> }\r\n        </Await>\r\n      </Suspense>\r\n      <Suspense>\r\n        <Await resolve={events}>\r\n        {(loadedEvents) => <EventsList event={loadedEvents}/> }\r\n        </Await>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventDetailsPage;\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n    //   status: 500,\r\n    // });\r\n    throw json({ message: \"Could not fetch events\" }, { status: 500 });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(`http://localhost:8080/events/${id}`);\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: \"Error fetching the event\" }, { status: 500 });\r\n  }\r\n  const resData = await response.json();\r\n  return resData.event;\r\n}\r\n\r\nexport function loader({ request, params }) {\r\n  const id = params.id;\r\n  defer({\r\n    event: loadEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nexport async function action({ request, params }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(`http://localhost:8080/events/${eventId}`, {\r\n    method: request.method,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"some error occured in deleting the event\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}