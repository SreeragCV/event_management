{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreer\\\\Code\\\\REACT\\\\routingAdvanced\\\\frontend\\\\src\\\\App.jsx\";\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport EventPage from \"./pages/EventPage\";\nimport EventDetailsPage, { action as deleteEventAction } from \"./pages/EventDetailsPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport { loader as eventsLoader } from \"./pages/EventPage\";\nimport { loader as eventDetailLoader } from \"./pages/EventDetailsPage\";\nimport Error from \"./pages/Error\";\nimport NewsletterPage from \"./pages/NewsLetter\";\nimport { action as newEventAction } from \"./components/EventForm\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this),\n        action: newEventAction\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this)\n      // action: manipulateEventAction,\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 18\n    }, this)\n    // action: newsletterAction,\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","RootLayout","HomePage","EventPage","EventDetailsPage","action","deleteEventAction","NewEventPage","EditEventPage","EventRootLayout","loader","eventsLoader","eventDetailLoader","Error","NewsletterPage","newEventAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","App","_c","$RefreshReg$"],"sources":["C:/Users/sreer/Code/REACT/routingAdvanced/frontend/src/App.jsx"],"sourcesContent":["import { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport RootLayout from \"./pages/RootLayout\";\nimport HomePage from \"./pages/HomePage\";\nimport EventPage from \"./pages/EventPage\";\nimport EventDetailsPage, {\n  action as deleteEventAction,\n} from \"./pages/EventDetailsPage\";\nimport NewEventPage from \"./pages/NewEventPage\";\nimport EditEventPage from \"./pages/EditEventPage\";\nimport EventRootLayout from \"./pages/EventRootLayout\";\nimport { loader as eventsLoader } from \"./pages/EventPage\";\nimport { loader as eventDetailLoader } from \"./pages/EventDetailsPage\";\nimport Error from \"./pages/Error\";\nimport NewsletterPage from \"./pages/NewsLetter\";\nimport { action as newEventAction } from \"./components/EventForm\";\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <Error />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: 'events',\n        element: <EventRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: ':eventId',\n            id: 'event-detail',\n            loader: eventDetailLoader,\n            children: [\n              {\n                index: true,\n                element: <EventDetailsPage />,\n                action: deleteEventAction,\n              },\n              {\n                path: 'edit',\n                element: <EditEventPage />,\n                action: newEventAction,\n              },\n            ],\n          },\n          {\n            path: 'new',\n            element: <NewEventPage />,\n            // action: manipulateEventAction,\n          },\n        ],\n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage />,\n        // action: newsletterAction,\n      },\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}